{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Chart_2/Chart_2.module.css","components/CountryPicker_2/CountryPicker_2.module.css","assets/shafik.jpeg","components/Cards_2/Cards_2.module.css","components/Spinner/Spinner.jsx","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.jsx","components/Nav/Nav.jsx","components/Chart_2/Chart_2.js","components/Cards_2/Cards_2.jsx","components/CountryPicker_2/CountryPicker_2.jsx","pages/Global.js","pages/Bangladesh.js","pages/About.js","router/Main.js","App.js","index.js","App.module.css","components/Cards/Cards.module.css","assets/covid_image.png","pages/About.module.css"],"names":["module","exports","BorderLinearProgress","withStyles","theme","root","height","borderRadius","colorPrimary","backgroundColor","palette","grey","type","bar","LinearProgress","useStylesFacebook","makeStyles","position","bottom","color","top","animationDuration","left","circle","strokeLinecap","FacebookCircularProgress","props","classes","className","CircularProgress","variant","size","thickness","value","disableShrink","useStyles","flexGrow","CustomizedProgressBars","Cards","data","confirmed","recovered","deaths","lastUpdate","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","gutterBottom","start","end","duration","separator","Date","toDateString","url","url_vt","fetchData","country","a","changableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","fetchDataFromVT","changeableUrl","console","log","timelineitems","Object","entries","e","modified_data","obj","key","keys","new_daily_cases","new_daily_deaths","fetchCountryTotalFromVT","countrydata","Chart","useState","setdailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","onChange","target","i","name","CenteredTabs","React","setValue","Paper","Tabs","event","newValue","indicatorColor","textColor","centered","Tab","Link","to","Chart_2","Cards_2","total_cases","rank","number","total_danger_rank","total_active_cases","total_new_cases_today","total_recovered","total_deaths","total_new_deaths_today","total_serious_cases","CountryPicker_2","iso2","Global","state","fetchedData","setState","this","style","image","src","coronaImage","alt","Component","Bangladesh","fetchedTotalData","maxWidth","media","MediaCard","about","MyImage","des","Main","exact","path","About","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e76ffd8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_2_container__yKpIV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_2_formControl__2D4Oz\"};","module.exports = __webpack_public_path__ + \"static/media/shafik.f4a78f6e.jpeg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_2_container__19f4G\",\"card\":\"Cards_2_card__35U41\",\"infected\":\"Cards_2_infected__2g4Yg\",\"recovered\":\"Cards_2_recovered__3O89l\",\"deaths\":\"Cards_2_deaths__3GF1N\",\"number\":\"Cards_2_number__Pgoo3\",\"rank\":\"Cards_2_rank__1UoUu\"};","import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst BorderLinearProgress = withStyles((theme) => ({\n    root: {\n        height: 10,\n        borderRadius: 5,\n    },\n    colorPrimary: {\n        backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    bar: {\n        borderRadius: 5,\n        backgroundColor: '#1a90ff',\n    },\n}))(LinearProgress);\n\n// Inspired by the former Facebook spinners.\nconst useStylesFacebook = makeStyles((theme) => ({\n    root: {\n        position: 'relative',\n    },\n    bottom: {\n        color: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    top: {\n        color: '#1a90ff',\n        animationDuration: '550ms',\n        position: 'absolute',\n        left: 0,\n    },\n    circle: {\n        strokeLinecap: 'round',\n    },\n}));\n\nfunction FacebookCircularProgress(props) {\n    const classes = useStylesFacebook();\n\n    return (\n        <div className={classes.root}>\n            <CircularProgress\n                variant=\"determinate\"\n                className={classes.bottom}\n                size={40}\n                thickness={4}\n                {...props}\n                value={100}\n            />\n            <CircularProgress\n                variant=\"indeterminate\"\n                disableShrink\n                className={classes.top}\n                classes={{\n                    circle: classes.circle,\n                }}\n                size={40}\n                thickness={4}\n                {...props}\n            />\n        </div>\n    );\n}\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n});\n\nexport default function CustomizedProgressBars() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <FacebookCircularProgress />\n            <br />\n            <BorderLinearProgress variant=\"determinate\" value={50} />\n        </div>\n    );\n}","import React from \"react\";\nimport {Card, CardContent, Typography, Grid} from \"@material-ui/core\";\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\nimport Spinner from '../Spinner/Spinner';\n\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\n    if(!confirmed){\n        return <Spinner/>\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\"  gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n                                start={0}\n                                end={confirmed.value}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">infected by Covid-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\"  gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n                                start={0}\n                                end={recovered.value}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">recovered from Covid-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\"  gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n                                start={0}\n                                end={deaths.value}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of deaths by Covid-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\nconst url_vt = 'https://api.thevirustracker.com/free-api?';\n\nexport const fetchData = async (country) => {\n    let changableUrl = url;\n    if (country) {\n        changableUrl = `${url}/countries/${country}`\n    }\n    try {\n        const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changableUrl);\n        return {confirmed, recovered, deaths, lastUpdate};\n    } catch (error) {\n\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try{\n        const {data} = await axios.get(`${url}/daily`)\n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n        }))\n        return modifiedData\n    }catch (error) {\n        \n    }\n}\n\n\nexport const fetchCountries = async () => {\n    try{\n        const {data:{countries}} = await axios.get(`${url}/countries`)\n        return countries\n    }catch (error) {\n\n    }\n}\n\nexport const fetchDataFromVT = async (country) => {\n    let changeableUrl = `${url_vt}countryTimeline=${country}`\n    console.log(\"URL: \", changeableUrl);\n\n    try {\n        const {data:{timelineitems}} = await axios.get(changeableUrl);\n        const data = Object.entries(timelineitems[0]).map((e) => ( { [e[0]]: e[1] } ));\n        const modified_data =  data.map((obj) => {\n\n            const key = Object.keys(obj)[0];\n\n            const confirmed = obj[key].new_daily_cases;\n            const deaths = obj[key].new_daily_deaths;\n            return {confirmed: confirmed, deaths: deaths, date:key}\n        })\n        return modified_data\n    } catch (error) {\n\n    }\n}\n\nexport const fetchCountryTotalFromVT = async (country) => {\n    let changeableUrl = `${url_vt}countryTotal=${country}`\n\n    try {\n        const {data:{countrydata}} = await axios.get(changeableUrl);\n        return countrydata[0]\n    } catch (error) {\n\n    }\n}\n","import React, {useState, useEffect} from \"react\";\nimport {Line, Bar} from \"react-chartjs-2\";\n\nimport {fetchDailyData} from \"../../api\";\nimport styles from './Chart.module.css';\n\nconst Chart = ({data, country}) => {\n    const [dailyData, setdailyData] = useState([]);\n    console.log(\"chart component........\")\n\n    useEffect(() => {\n            console.log(\"useEffect function calling....\")\n            const fetchAPI = async () =>{\n                setdailyData(await fetchDailyData());\n            };\n            fetchAPI();\n        }, []\n\n    );\n    const lineChart = (\n        dailyData.length\n            ? (\n        <Line\n            data={{\n                labels: dailyData.map(({date}) => date),\n                datasets :[{\n                    data: dailyData.map(({confirmed}) => confirmed),\n                    label: 'Infected',\n                    borderColor: '#3333ff',\n                    fill: true,\n                }, {\n                    data: dailyData.map(({deaths}) => deaths),\n                    label: 'Deaths',\n                    borderColor: 'red',\n                    backgroundColor: 'rgba(255,0,0,0.5)',\n                    fill: true,\n                }]\n            }}\n        />): null\n    );\n\n    const barChart = (\n        data.confirmed\n            ?(\n                <Bar data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: [\n                            'rgba(0,0,255, 0.5)',\n                            'rgba(0,255,0, 0.5)',\n                            'rgba(255,0,0, 0.5)',\n                        ],\n                        data:[data.confirmed.value, data.recovered.value, data.deaths.value]\n                    }]\n                }}\n                     options={{\n                         legend: {display: false},\n                         title: {display: true, text: `Current state in ${country}`},\n                     }}\n\n                />\n\n            ): null\n    )\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart: lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React, {useState, useEffect} from \"react\";\nimport {NativeSelect, FormControl} from \"@material-ui/core\";\n\nimport {fetchCountries} from \"../../api\";\n\nimport styles from './CountryPicker.module.css';\n\n\nconst CountryPicker = ({handleCountryChange}) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries())\n\n        }\n        fetchAPI();\n    }, [setFetchedCountries]);\n    console.log(\"countries: \", fetchedCountries);\n\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, i) => <option key={i} value={country.name}>{country.name}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n});\n\nexport default function CenteredTabs() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <Paper className={classes.root}>\n            <Tabs\n                value={value}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                centered\n            >\n                <Tab label=\"Bangladesh\" value=\"/\" component={Link} to=\"/\"/>\n                <Tab label=\"Global\" value=\"/global\" component={Link} to=\"/global\"/>\n                <Tab label=\"About Me\" value=\"/about\" component={Link} to=\"/about\" />\n            </Tabs>\n        </Paper>\n    );\n}","import React, {useState, useEffect} from \"react\";\nimport {Line, Bar} from \"react-chartjs-2\";\n\nimport {fetchDataFromVT} from \"../../api\";\nimport styles from './Chart_2.module.css';\n\nconst Chart_2 = ({data, country}) => {\n    const [dailyData, setdailyData] = useState([]);\n    console.log(\"chart component........\")\n\n    useEffect(() => {\n            console.log(\"useEffect function calling....\")\n            const fetchAPI = async () =>{\n                setdailyData(await fetchDataFromVT(country));\n            };\n            fetchAPI();\n        }, []\n\n    );\n    const lineChart = (\n        dailyData.length\n            ? (\n        <Line\n            data={{\n                labels: dailyData.map(({date}) => date),\n                datasets :[{\n                    data: dailyData.map(({confirmed}) => confirmed),\n                    label: 'Infected',\n                    borderColor: '#3333ff',\n                    fill: true,\n                }, {\n                    data: dailyData.map(({deaths}) => deaths),\n                    label: 'Deaths',\n                    borderColor: 'red',\n                    backgroundColor: 'rgba(255,0,0,0.5)',\n                    fill: true,\n                }]\n            }}\n        />): null\n    );\n\n    const barChart = (\n        data.confirmed\n            ?(\n                <Bar data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: [\n                            'rgba(0,0,255, 0.5)',\n                            'rgba(0,255,0, 0.5)',\n                            'rgba(255,0,0, 0.5)',\n                        ],\n                        data:[data.confirmed.value, data.recovered.value, data.deaths.value]\n                    }]\n                }}\n                     options={{\n                         legend: {display: false},\n                         title: {display: true, text: `Current state in ${country}`},\n                     }}\n\n                />\n\n            ): null\n    )\n\n    return (\n        <div className={styles.container}>\n            {lineChart}\n        </div>\n    )\n}\n\nexport default Chart_2;","import React from \"react\";\nimport {Card, CardContent, Typography, Grid} from \"@material-ui/core\";\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards_2.module.css';\nimport Spinner from '../Spinner/Spinner';\n\nconst Cards_2 = ({data, country}) => {\n    console.log(\"Card2 Data:....\", data)\n    if(!data.total_cases){\n        return <Spinner/>\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths, styles.rank)}>\n                    <CardContent>\n                        <Typography color=\"textPrimary\"  gutterBottom>Danger Rank of {country}</Typography>\n                        <Typography variant=\"h2\" className={styles.number}>\n                            <CountUp\n                                start={0}\n                                end={data.total_danger_rank}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\"  gutterBottom>Total Cases</Typography>\n                        <Typography variant=\"h5\">\n                            <b>\n                                <CountUp\n                                    start={0}\n                                    end={data.total_cases}\n                                    duration={2.5}\n                                    separator=\",\"\n                                />\n                            </b>\n                        </Typography>\n                        <Typography color=\"textSecondary\">Active Cases:\n                            <CountUp\n                                start={0}\n                                end={data.total_active_cases}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">New Cases:\n                            <CountUp\n                                start={0}\n                                end={data.total_new_cases_today}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\"  gutterBottom>Total Recovered:</Typography>\n                        <Typography variant=\"h5\">\n                            <b>\n                                <CountUp\n                                    start={0}\n                                    end={data.total_recovered}\n                                    duration={2.5}\n                                    separator=\",\"\n                                />\n                            </b>\n                        </Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\"  gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h6\">\n                            <b>\n                                <CountUp\n                                    start={0}\n                                    end={data.total_deaths}\n                                    duration={2.5}\n                                    separator=\",\"\n                                />\n                            </b>\n\n                        </Typography>\n                        <Typography color=\"textSecondary\">New Deaths:\n                            <CountUp\n                                start={0}\n                                end={data.total_new_deaths_today}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">Serious Cases:\n                            <CountUp\n                                start={0}\n                                end={data.total_serious_cases}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                    </CardContent>\n                </Grid>\n\n\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards_2;","import React, {useState, useEffect} from \"react\";\nimport {NativeSelect, FormControl} from \"@material-ui/core\";\n\nimport {fetchCountries} from \"../../api\";\n\nimport styles from './CountryPicker_2.module.css';\n\n\nconst CountryPicker_2 = ({handleCountryChange}) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries())\n\n        }\n        fetchAPI();\n    }, [setFetchedCountries]);\n\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"BD\">Bangladesh</option>\n                {fetchedCountries.map((country, i) => <option key={i} value={country.iso2}>{country.name}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker_2;\n","import React from \"react\";\n\n\nimport {Cards, Chart, CountryPicker} from '../components'\nimport style from '../App.module.css';\nimport {fetchData} from \"../api\";\nimport coronaImage from '../assets/covid_image.png'\n\n\n\nclass Global extends React.Component{\n\n    state = {\n        data: {},\n        country: \"\",\n    }\n\n    handleCountryChange = async (country) => {\n        console.log(\"Country Name: \", country);\n        const fetchedData = await fetchData(country);\n        this.setState({data: fetchedData, country: country});\n\n    }\n\n    async componentDidMount() {\n        console.log(\"did mount...\")\n        const fetchedData = await fetchData();\n        this.setState({data: fetchedData})\n        console.log(\"fetched data:\", fetchedData);\n    }\n\n    render() {\n        const {data, country} = this.state\n        return (\n            <div className={style.container}>\n                <img className={style.image} src={coronaImage} alt=\"covid-19\"/>\n                <Cards data={data}/>\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\n                <Chart data={data} country={country}/>\n            </div>\n        );\n    }\n}\n\nexport default Global;","import React from \"react\";\n\n\nimport {Cards_2, Chart_2, CountryPicker_2} from '../components'\nimport style from '../App.module.css';\nimport {fetchDataFromVT, fetchCountryTotalFromVT} from \"../api\";\nimport coronaImage from '../assets/covid_image.png'\n\n\n\nclass Bangladesh extends React.Component{\n\n    state = {\n        data: {},\n        total: {},\n        country: \"BD\",\n    }\n\n    handleCountryChange = async (country) => {\n        console.log(\"Country Name: \", country);\n        const fetchedData = await fetchDataFromVT(country);\n        const fetchedTotalData = await fetchCountryTotalFromVT(country);\n        this.setState({total: fetchedTotalData, data: fetchedData, country:country});\n\n    }\n\n    async componentDidMount() {\n        const fetchedData = await fetchDataFromVT(this.state.country);\n        const fetchedTotalData = await fetchCountryTotalFromVT(this.state.country);\n        this.setState({total: fetchedTotalData, data: fetchedData});\n    }\n\n    render() {\n        const {data, total, country} = this.state\n        return (\n            <div className={style.container}>\n                <img className={style.image} src={coronaImage} alt=\"covid-19\"/>\n                <Cards_2 data={total} country={this.state.country}/>\n                <CountryPicker_2 handleCountryChange={this.handleCountryChange}/>\n                <Chart_2 data={data} country={country}/>\n            </div>\n        );\n    }\n}\n\nexport default Bangladesh;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport MyImage from '../assets/shafik.jpeg';\nimport styles from './About.module.css';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 140,\n    },\n});\n\nexport default function MediaCard() {\n    const classes = useStyles();\n\n    return (\n        <div className={styles.about}>\n            <img src={MyImage} alt=\"\" className={styles.image}/>\n            <div>\n                <h2 className={styles.name}>MSI Shafik</h2>\n            </div>\n            <div>\n                <p className={styles.des}>(Software Engineer)</p>\n            </div>\n        </div>\n\n    );\n}","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Global from \"../pages/Global\";\nimport Bangladesh from \"../pages/Bangladesh\";\nimport About from '../pages/About';\n\nconst Main = () => {\n    return (\n        <Switch> {/* The Switch decides which component to show based on the current URL.*/}\n            <Route exact path='/' component={Bangladesh}></Route>\n            <Route exact path='/covid-tracker' component={Bangladesh}></Route>\n            <Route exact path='/global' component={Global}></Route>\n            <Route exact path='/about' component={About}></Route>\n        </Switch>\n    );\n}\n\nexport default Main;","import React from \"react\";\n\nimport Main from './router/Main'\nimport {Nav} from \"./components\";\nimport {Cards, Chart, CountryPicker} from './components';\nimport style from './App.module.css';\nimport {fetchData} from \"./api\";\nimport coronaImage from './assets/covid_image.png'\n\n// import Cards_2 from \"./components/Cards_2/Cards_2\";\n// import Chart_2 from \"./components/Chart_2/Chart_2\";\n// import CountryPicker_2 from \"./components/CountryPicker_2/CountryPicker_2\";\n\n\nclass App extends React.Component{\n\n    render() {\n        return (\n            <div className={style.container}>\n                <Nav/>\n                <Main/>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nimport App from './App';\n\nReactDOM.render((\n        <BrowserRouter>\n            <App /> {/* The various pages will be displayed by the `Main` component. */}\n        </BrowserRouter>\n    ), document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","module.exports = __webpack_public_path__ + \"static/media/covid_image.d7265326.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about\":\"About_about__fLPwQ\",\"image\":\"About_image__1M6f1\",\"name\":\"About_name__1FjY0\",\"des\":\"About_des__2K4QS\"};"],"sourceRoot":""}